# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Experimental Monday Feedback API.
  description:  This is a REST API that allows people to POST their feedback about experimentation Monday anonymously. Includes a single endpoint. 
  version: "1.0.0"
# the domain of the service
host: experimentation-mondays-feedback-api.herokuapp.com
# array of all schemes that your API supports
tags:
  - name: "Feedback"
    description: "User's overall feelings about experimentation day"
schemes:
  - https
# will be prefixed to all paths
basePath: /
consumes:
  - application/json
paths:
  /feedback:
    post:
      summary: Feedback
      description: |
        Feedback on feelings about the particular experimentation, new learning and anticipation about the upcoming experimentation day.
      parameters:
        - name: experiment_feeling
          in: query
          description: How does user feel baout this particular experiment
          required: true
          type: string
          format: formData
        - name: experiment_learning
          in: query
          description: User's feeback about whether s/he learnt something new from the experiment or not
          required: true
          type: string
          format: formData
        - name: experiment_anticipation
          in: query
          description: User's feeling about the upcoming experimentation day
          required: true
          type: string
          format: form_data  
        - name: experiment_comment
          in: query
          description: additional feedback given by users
          required: false
          type: string
          format: form_data 
      tags:
        - Feedback
      responses:
        200:
          description: An array of feedback
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
definitions:
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  PriceEstimate:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
